// Vendor Prefixes


// - Box Shadows
// - Text shadow
// - border-radius
// - gradient
// - transition


// BOX SHADOW

@mixin box-shadow($top: 0px, $left:0px, $blur:5px, $size:1px, $color: rgba(0,0,0,.3), $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset, $top, $left, $blur, $size, $color;
        -moz-box-shadow:inset $top $left $blur $size $color;
        box-shadow:inset, $top, $left, $blur, $size, $color;
    } @else {
      
        box-shadow: $top $left $blur $size $color;
    }
}

// TEXT SHADOW

@mixin text-shadow($x: 1px, $y: 1px, $blur: 1px, $color: rgba(0,0,0,.7)) {
    text-shadow: $x $y $blur $color;
}


// TRANSITION

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}
@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}
@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}
@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}
@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}

// Shapes

@mixin square($width, $height, $color) {
    width: $width;
    height: $height;
    background-color: $color;
}

@mixin shape($shape, $size, $color){
	@if $shape == square {
		width: $size;
		height: $size;
		background-color: $color;
	}
	@if $shape == circle {
		width: $size;
		height: $size;
		background-color: $color;
		border-radius: 50%;
	}
	@if $shape == triangle {
		width: 0;
		height: 0;
		border-left: $size*75 solid transparent;
		border-right: $size*10 solid transparent;
		border-bottom: $size*9 solid $color;
	}
    @if $shape == triangle1 {
		width: 0;
		height: 0;
		border-left: $size solid transparent;
		border-right: $size solid transparent;
		border-bottom: $size*1.5 solid $color;
	}
	@if $shape == right-triangle {
		width: 0;
		height: 0;
		border-bottom: $size solid $color;
		border-right: $size solid transparent;
	}
	@if $shape == diamond {
		width: 0;
		height: 0;
		border: $size solid transparent;
		border-bottom-color: $color;
		position: relative;
		top: -$size;
	
		&:after {
			content: '';
			position: absolute;
			left: -$size;
			top: $size;
			width: 0;
			height: 0;
			border: $size solid transparent;
			border-top-color: $color;
		}
	}
	@if $shape == pentagon {
		position: relative;
		width: $size;
		border-width: (25/27)*$size (1/3)*$size 0;
		border-style: solid;
		border-color: $color transparent;
		
		&:before {
			content: "";
			position: absolute;
			height: 0;
			width: 0;
			top: (-17/11)*$size;
			left: (-1/3)*$size;
			border-width: 0 (5/6)*$size (35/54)*$size;
			border-style: solid;
			border-color: transparent transparent $color;
		}
	}
	@if $shape == hexagon {
		width: $size*2;
		height: $size*1.1;
		background: $color;
		position: relative;
		&:before {
			content: "";
			position: absolute;
			top: $size/-2;
			left: 0;
			width: 0;
			height: 0;
			border-left: $size solid transparent;
			border-right: $size solid transparent;
			border-bottom: $size/2 solid $color;
		}
		&:after {
			content: "";
			position: absolute;
			bottom: $size/-2;
			left: 0;
			width: 0;
			height: 0;
			border-left: $size solid transparent;
			border-right: $size solid transparent;
			border-top: $size/2 solid $color;
		}
	}
	@if shape == octogon {
		width: $size;
		height: $size;
		background: transparent;
		position: relative;
		text-align: center;
	
		&:before {
			content: "";
			position: absolute;
			top: 0;
			left: 0;
			border-bottom: 29/$size solid $color;
			border-left: 29/$size solid transparent;
			border-right: 29/$size solid transparent;
			width: 42/$size;
			height: 0;
		}
		
		&:after {
			content: "";
			position: absolute;
			bottom: 0;
			left: 0;
			border-top: 29/$size solid $color;
			border-left: 29/$size solid transparent;
			border-right: 29/$size solid transparent;
			width: 42/$size;
			height: 0;
		}
	}
}

// generic transform
@mixin transform($transforms) {
	   -moz-transform: $transforms;
	     -o-transform: $transforms;
	    -ms-transform: $transforms;
	-webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}





